name: üè∑Ô∏è Release Build

on:
  pull_request_target:
    types: [closed]
    branches: [master]
    paths: [data/versions.json]

permissions:
  contents: write

jobs:
  check:
    uses: ./.github/workflows/release-check.yml

  release:
    name: üì¶ Create Release
    needs: check
    if: ${{ needs.check.outputs.version_exists == 'false' }}
    runs-on: ubuntu-latest
    environment: release
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Git User
        uses: fregante/setup-git-user@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - name: Cache Beet Content
        uses: actions/cache@v4
        with:
          path: .beet_cache
          key: ${{ runner.os }}-beet-cache
      - name: Build Release Files
        run: uv run modules release
        env:
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
          SMITHED_TOKEN: ${{ secrets.SMITHED_TOKEN }}
      - name: Create New Stable Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: docs/changelog/${{ needs.check.outputs.release_tag }}.md
          name: Release ${{ needs.check.outputs.release_name }}
          tag_name: ${{ needs.check.outputs.release_tag }}
          make_latest: true
          files: release/*.zip
      - name: Update Tag
        run: |
          git fetch --tags --force
          git push --delete origin latest || true
          git tag -f latest ${{ needs.check.outputs.release_tag }}
          git push origin latest

  publish:
    name: üöÄ PyPI Publish
    needs: release
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - name: Publish to PyPI
        run: uv publish
